@extends('landlord.layouts.app')

@section('title', 'Qu·∫£n l√Ω d·ªãch v·ª•')

@section('content')
    <div class="container mt-4">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0 text-white">üì¶ Danh s√°ch d·ªãch v·ª•</h5>
                <a href="{{ route('landlords.services.create') }}" class="btn btn-light btn-sm">
                    ‚ûï Th√™m d·ªãch v·ª•
                </a>
            </div>

            <div class="card-body">
                {{-- B·∫£ng d·ªãch v·ª• --}}
                <div class="table-responsive">
                    <table class="table table-hover align-middle text-center">
                        <thead class="table-light">
                            <tr>
                                <th width="30%">T√™n d·ªãch v·ª•</th>
                                <th width="50%">M√¥ t·∫£</th>
                                <th width="20%">H√†nh ƒë·ªông</th>
                            </tr>
                        </thead>
                        <tbody>
                            @forelse($services as $service)
                                <tr>
                                    <td class="fw-semibold">{{ $service->name }}</td>
                                    <td class="text-muted">{{ $service->description ?? '‚Äî' }}</td>
                                    <td>
                                        <a href="{{ route('landlords.services.edit', $service) }}"
                                            class="btn btn-sm btn-outline-warning me-1">‚úèÔ∏è S·ª≠a</a>

                                        {{-- <form action="{{ route('landlords.services.destroy', $service) }}" method="POST"
                                            class="d-inline"
                                            onsubmit="return confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën xo√° d·ªãch v·ª• n√†y?')">
                                            @csrf
                                            @method('DELETE')
                                            <button class="btn btn-sm btn-outline-danger">üóëÔ∏è Xo√°</button>
                                        </form> --}}

                                        <button
                                            class="btn btn-sm toggle-visibility-btn {{ $service->is_hidden ? 'btn-outline-success' : 'btn-outline-secondary' }}"
                                            data-id="{{ $service->service_id }}">
                                            {{ $service->is_hidden ? 'üëÅÔ∏è B·ªè ·∫©n' : 'üôà ·∫®n' }}
                                        </button>
                                    </td>
                                </tr>
                            @empty
                                <tr>
                                    <td colspan="3" class="text-muted">Ch∆∞a c√≥ d·ªãch v·ª• n√†o.</td>
                                </tr>
                            @endforelse
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
@endsection

@push('scripts')
    {{-- SweetAlert2 CDN (ch·ªâ c·∫ßn n·∫øu layout ch∆∞a c√≥) --}}
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    {{-- Hi·ªÉn th·ªã th√¥ng b√°o SweetAlert2 n·∫øu c√≥ --}}
    @if (session('success'))
        <script>
            Swal.fire({
                title: "Th√†nh c√¥ng!",
                text: "{{ session('success') }}",
                icon: "success",
                confirmButtonText: "OK"
            });
        </script>
    @endif

    {{-- AJAX Toggle ·∫®n / B·ªè ·∫©n --}}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.toggle-visibility-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const serviceId = this.getAttribute('data-id');
                    const btn = this;

                    fetch(`/landlords/services/${serviceId}/toggle`, {
                            method: 'PATCH',
                            headers: {
                                'X-CSRF-TOKEN': '{{ csrf_token() }}',
                                'Accept': 'application/json',
                                'Content-Type': 'application/json',
                            },
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.status === 'success') {
                                if (data.is_hidden) {
                                    btn.textContent = 'üëÅÔ∏è B·ªè ·∫©n';
                                    btn.classList.remove('btn-outline-secondary');
                                    btn.classList.add('btn-outline-success');
                                } else {
                                    btn.textContent = 'üôà ·∫®n';
                                    btn.classList.remove('btn-outline-success');
                                    btn.classList.add('btn-outline-secondary');
                                }

                                Swal.fire({
                                    icon: 'success',
                                    title: 'Th√†nh c√¥ng!',
                                    text: data.is_hidden ? 'D·ªãch v·ª• ƒë√£ ƒë∆∞·ª£c ·∫©n.' :
                                        'D·ªãch v·ª• ƒë√£ ƒë∆∞·ª£c b·ªè ·∫©n.',
                                    timer: 1500,
                                    showConfirmButton: false
                                });
                            }
                        });
                });
            });
        });
    </script>
@endpush
